
package main

import (
	"fmt"
	"flag"
	"os"
	"syscall"
	 
	sec "seccomp" 
)

const (
	STDIN_FILENO  = 0
	STDOUT_FILENO = 1
	BUFLEN = 8
)

func writeOk(args []string) {
	scmpCtx, _ := sec.ScmpInit(sec.ScmpActAllow)

	sec.ScmpAdd(scmpCtx, sec.Sys("exit"), sec.ScmpActAllow)
	sec.ScmpAdd(scmpCtx, sec.Sys("exit_group"), sec.ScmpActAllow)
	
	//the first arg is STDOUT_FILENO, the third arg must be <= BUFLEN
	sec.ScmpAdd(scmpCtx, sec.Sys("write"), sec.ScmpActAllow,
		sec.FilterArgs{[]sec.Filter{{0, sec.EQ, STDOUT_FILENO}}},
		sec.FilterArgs{[]sec.Filter{{2, sec.LE, BUFLEN}}},
	)

	sec.ScmpLoad(scmpCtx)
	fmt.Printf("8888888\n")  //ok
}

func writeErr(args []string) {
	scmpCtx, _ := sec.ScmpInit(sec.ScmpActAllow)

	sec.ScmpAdd(scmpCtx, sec.Sys("exit"), sec.ScmpActAllow)
	sec.ScmpAdd(scmpCtx, sec.Sys("exit_group"), sec.ScmpActAllow)

	sec.ScmpAdd(scmpCtx, sec.Sys("write"), sec.ScmpActAllow,
		sec.FilterArgs{[]sec.Filter{{0, sec.EQ, STDOUT_FILENO}}},
		sec.FilterArgs{[]sec.Filter{{2, sec.LE, BUFLEN}}},
	)

	sec.ScmpLoad(scmpCtx)
	
    // bad system call
	fmt.Printf("99999999\n") 
}

func socketOk(args []string) {
	scmpCtx, _ := sec.ScmpInit(sec.ScmpActAllow)
    
	//for 386, the next line is same as 
	//sec.ScmpAdd(scmpCtx, sec.Sys("socketcall"), sec.ScmpActAllow,
	//	sec.FilterArgs{[]sec.Filter{{0, sec.EQ, 1}}},
	//)
	//SYS_SOCKET = 1
    sec.ScmpAdd(scmpCtx, sec.Sys("socket"), sec.ScmpActAllow)
	
	sec.ScmpAdd(scmpCtx, sec.Sys("exit"), sec.ScmpActAllow)
	sec.ScmpAdd(scmpCtx, sec.Sys("exit_group"), sec.ScmpActAllow)

	sec.ScmpAdd(scmpCtx, sec.Sys("write"), sec.ScmpActAllow,
		sec.FilterArgs{[]sec.Filter{{0, sec.EQ, STDOUT_FILENO}}},
		sec.FilterArgs{[]sec.Filter{{2, sec.LE, BUFLEN}}},
	)

	sec.ScmpLoad(scmpCtx)

	syscall.Socket(syscall.AF_INET, syscall.SOCK_STREAM, syscall.IPPROTO_IP)
	fmt.Printf("Sock ok\n")
}

func socketErr(args []string) {
	scmpCtx, _ := sec.ScmpInit(sec.ScmpActAllow)

	sec.ScmpAdd(scmpCtx, sec.Sys("exit"), sec.ScmpActAllow)
	sec.ScmpAdd(scmpCtx, sec.Sys("exit_group"), sec.ScmpActAllow)

	sec.ScmpLoad(scmpCtx)
	
	// bad system call
	syscall.Socket(syscall.AF_INET, syscall.SOCK_STREAM, syscall.IPPROTO_IP)
}



func main() {
	flag.Parse()

    if 1 == flag.NArg() {
	    idx := 0
		args := os.Args[(idx + 1):]
	    if flag.Arg(idx) == "writeOk" {
			writeOk(args)
		} else if flag.Arg(idx) == "writeErr" {
			writeErr(args)
		} else if flag.Arg(idx) == "socketOk" {
			socketOk(args)
		} else if flag.Arg(idx) == "socketErr" {
			socketErr(args)
		}
	}
}

