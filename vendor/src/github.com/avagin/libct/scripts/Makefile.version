VERSION		:= $(VERSION_MAJOR)$(if $(VERSION_MINOR),.$(VERSION_MINOR))$(if $(VERSION_SUBLEVEL),.$(VERSION_SUBLEVEL))

VERSION_HEADER := src/include/version.h
GITID := $(shell if [ -d ".git" ]; then git reflog -n 1 | cut -f1 -d' '; fi)
ifeq ($(GITID),)
	GITID := 0
endif

VERSION_CODE := $(shell expr $(VERSION_MAJOR) \* 65536 \+ $(VERSION_MINOR) \* 256 \+ $(VERSION_SUBLEVEL))

$(VERSION_HEADER): Makefile scripts/Makefile.version
	$(E) "  GEN     " $@
	$(Q) echo "/* Autogenerated, do not edit */"	 		 > $(VERSION_HEADER)
	$(Q) echo "#ifndef __LIBCT_VERSION_H__"				>> $(VERSION_HEADER)
	$(Q) echo "#define __LIBCT_VERSION_H__"				>> $(VERSION_HEADER)
	$(Q) echo "#define LIBCT_VERSION \"$(VERSION)\""		>> $(VERSION_HEADER)
	$(Q) echo "#define LIBCT_VERSION_MAJOR " $(VERSION_MAJOR)	>> $(VERSION_HEADER)
	$(Q) echo "#define LIBCT_VERSION_MINOR " $(VERSION_MINOR)	>> $(VERSION_HEADER)
	$(Q) echo "#define LIBCT_VERSION_SUBLEVEL " $(VERSION_SUBLEVEL)	>> $(VERSION_HEADER)
	$(Q) echo "#define LIBCT_VERSION_CODE " $(VERSION_CODE)		>> $(VERSION_HEADER)
	$(Q) echo "#define LIBCT_GITID \"$(GITID)\""			>> $(VERSION_HEADER)
	$(Q) echo "#define LIBCT_GEN_VERSION(a,b,c) \\"			>> $(VERSION_HEADER)
	$(Q) echo "	(((a) << 16) + ((b) << 8) + (c))"		>> $(VERSION_HEADER)
	$(Q) echo "#endif /* __LIBCT_VERSION_H__ */"			>> $(VERSION_HEADER)

##
## In case if someone add last resort rule
## together with .SUFFIXES not cleaned, this
## will slow down the build procedure
scripts/Makefile.version::
	@echo > /dev/null
